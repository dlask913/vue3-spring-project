pipeline {
  agent any

  environment {
    SERVICE_NAME = "noticeboard-service"
    JAR_NAME = "${SERVICE_NAME}-0.0.1-SNAPSHOT.jar"
    BUILD_JAR = "build/libs/${JAR_NAME}"
    FRONTEND_DIST_DIR = "dist"

    MAIL_USERNAME = credentials('MAIL_USERNAME')
    MAIL_PASSWORD = credentials('MAIL_PASSWORD')
    KAKAO_API_KEY = credentials('KAKAO_API_KEY')
    JWT_SECRET = credentials('JWT_SECRET')
    SLACK_WEBHOOK_URL = credentials('SLACK_WEBHOOK_URL')
  }

  stages {
    stage('Backend Build') {
      steps {
        dir('noticeboard-service/backend') {
          sh 'chmod +x gradlew'
          sh './gradlew clean build -x test'
        }
      }
    }

    stage('Frontend Build') {
      steps {
        dir('noticeboard-service/frontend') {
          sh 'npm install'
          sh 'npm run build'
        }
      }
    }

    stage('Deploy') {
      steps {
        dir('noticeboard-service') {
          sh '''
          echo "üê≥ Stopping existing containers..."
          docker-compose down

          echo "üê≥ Building new images..."
          docker-compose build

          echo "üöÄ Starting containers with updated build..."
          docker compose up -d
          '''
        }
      }
    }
  }

  post {
    failure {
      echo 'üö® Jenkins Build Failed'
    }
  }
}
