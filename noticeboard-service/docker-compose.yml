version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-app
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: noticeboard
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - backend


  spring-app-1:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: spring-app-1
    working_dir: /app
    volumes:
      - app_images:/app/images
      - ./logs/spring-app-1:/app/logs  # 로그 디렉토리 추가
    environment:
      SPRING_PROFILES_ACTIVE: dev
    expose:
      - "8080"
    depends_on:
      - mysql
    networks:
      - backend

  spring-app-2:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: spring-app-2
    working_dir: /app
    volumes:
      - app_images:/app/images
      - ./logs/spring-app-2:/app/logs  # 로그 디렉토리 추가
    environment:
      SPRING_PROFILES_ACTIVE: dev
    expose:
      - "8080"
    depends_on:
      - mysql
    networks:
      - backend
  
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx-app
    depends_on:
      - spring-app-1
      - spring-app-2
    ports:
      - "80:80"
      - "443:443"
    networks:
      - backend

  log-backup:
    image: alpine:latest
    container_name: log-backup
    volumes:
      - ./backup-logs.sh:/backup-logs.sh:ro
      - ./logs/spring-app-1:/logs/spring-app-1:ro
      - ./logs/spring-app-2:/logs/spring-app-2:ro
      - ./backup_logs:/backup_logs
    entrypoint: ["/bin/sh", "-c", "apk add --no-cache bash coreutils grep && while true; do /backup-logs.sh; sleep 86400; done"]
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  mysql_data: # 데이터 저장
  app_images: # 이미지 저장
