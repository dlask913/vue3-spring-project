<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.noticeboardservice.mapper.MemberMapper">
    <!-- 회원 생성 -->
    <insert id="insertMember" parameterType="MemberRequestDto" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO Members (username, email, password)
        VALUES (#{username}, #{email}, #{password})
    </insert>

    <!-- 회원 정보 수정 -->
    <update id="updateMember" parameterType="MemberRequestDto">
        UPDATE Members
        SET username = #{username}, password = #{password}
        WHERE id = #{id}
    </update>

    <!-- 회원 단일 조회 -->
    <select id="findMember" resultMap="MemberResponseDtoMap" parameterType="long">
        WITH MemberImg AS (
            SELECT *
            FROM images
            WHERE image_type = 'MEMBER'
        )

        SELECT A.id, A.username, A.email, A.password,
            COALESCE(B.img_url, '/image/memberDefaultImg.jpg') AS img_url,
            C.address_name AS address
        FROM Members A
            LEFT JOIN MemberImg B ON A.id = B.type_id
            LEFT JOIN Addresses C ON A.id = C.member_id
        WHERE A.id = #{id}
    </select>

    <!-- 회원 단일 조회 by Email -->
    <select id="findMemberByEmail" resultMap="MemberResponseDtoMap" parameterType="String">
        SELECT id, username, email, password, NULL AS img_url, NULL AS address
        FROM Members
        WHERE email = #{email}
    </select>

    <!-- 회원 데이터 모두 조회 -->
    <select id="findAllMembers" resultMap="MemberResponseDtoMap">
        SELECT id, username, email, password, NULL AS img_url, NULL AS address
        FROM Members
    </select>

    <!-- 회원 탈퇴 -->
    <delete id="deleteMember" parameterType="long">
        DELETE FROM Members
        WHERE id = #{id}
    </delete>

    <!-- 회원 데이터 모두 삭제 -->
    <delete id="deleteAll">
        DELETE FROM Members
    </delete>

    <!-- record 에는 setter 가 존재하지 않기 때문에 생성자 기반 필드 매핑 -->
    <resultMap id="MemberResponseDtoMap" type="com.example.noticeboardservice.dto.MemberResponseDto">
        <constructor>
            <arg column="id" javaType="java.lang.Long"/>
            <arg column="username" javaType="java.lang.String"/>
            <arg column="email" javaType="java.lang.String"/>
            <arg column="password" javaType="java.lang.String"/>
            <arg column="img_url" javaType="java.lang.String"/>
            <arg column="address" javaType="java.lang.String"/>
        </constructor>
    </resultMap>
</mapper>
